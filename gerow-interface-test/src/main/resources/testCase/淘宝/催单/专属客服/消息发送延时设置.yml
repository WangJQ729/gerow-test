name: 消息发送延时设置
story: ${reminder_type}
dataProvider:
  - node_state: paid
    order_state: paid
    message: 对我们的服务满意吗？让我成为你的专属客服吧，以后有事儿您找我！
    text_with_vars: ${message}
    reminder_type: 专属客服已付款
  - node_state: succeeded
    order_state: succeeded
    message: 对我们的服务满意吗？让我成为你的专属客服吧，以后有事儿您找我！
    text_with_vars: ${message}
    reminder_type: 专属客服交易成功
beforeClass:
  name: 获取taskID和模板
  step:
    - keyWord: 获取专属客服task_id
    - keyWord: 删除其他催单任务
    - keyWord: 获取专属客服task模板
    - keyWord: 使用模板新建一个task

testMethod:
  - name: 设置${state_delay}秒后发送催单消息
    dataProvider:
      - state_delay: 20
#      - state_delay: 60
#      - state_delay: 120
    severity: NORMAL
    step:
      - keyWord: 开启催单任务-设置消息延迟
      - keyWord: 随机顾客发送消息给商家-固定问题
      - keyWord: 模拟pulsar订单消息
      - keyWord: 根据订单查询trace
      - keyWord: 查看trace详情-TaskSetTimer
      - keyWord: 获取任务触发时间
      - keyWord: 校验TaskSetTimer正确
      - keyWord: 获取催单消息-5秒拉一次
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - keyWord: 根据订单查询trace
    - keyWord: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - keyWord: 删除催单任务
classHeartbeat:
  name: 心跳检测表示客服在线
  step:
    - keyWord: 主账号发送心跳检测