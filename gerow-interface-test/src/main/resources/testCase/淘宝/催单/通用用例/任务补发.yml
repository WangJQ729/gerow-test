name: 任务补发
story: ${reminder_type}
dataProvider:
  - node_state: created
    order_state: created
    message: 您好，您还有订单米有付款捏，要抓紧时间支付哦，小妹好给您优先尽快发出哦~让您美美的早些收到哦~
    text_with_vars: ${message}
    reminder_type: 下单未付款
  - node_state: checkaddr
    order_state: created
    message: 亲，您的订单已经收到，请核对以下信息是否正确，我们将尽快为您发出！
    text_with_vars: ${message}
    reminder_type: 核对地址
  - node_state: deposited
    order_state: deposited
    message: defualt message!
    text_with_vars: ${message}
    reminder_type: 已付定金未付尾款
  - node_state: paid
    order_state: paid
    message: 亲，您的订单已经收到，感谢您对我们的支持，我们将尽快为您发出！
    text_with_vars: ${message}
    reminder_type: 已付款
  - node_state: shipped_delay
    order_state: paid
    message: 由于近期订单量过大，发货小妹没能及时给您发货，实在抱歉。麻烦您耐心等待，小妹会尽快安排给您优先发货呢！
    text_with_vars: ${message}
    reminder_type: 发货超时
  - node_state: send_scan
    order_state: send_scan
    message: 您的快递已经派件了！收货时，请检查快递的外包装是否完整，当场验货确认无误后，再签收哦！
    text_with_vars: ${message}
    reminder_type: 验收提醒
  - node_state: closed
    order_state: closed
    message: 亲，您对宝贝有什么不满意的吗？
    text_with_vars: ${message}
    reminder_type: 交易取消
beforeClass:
  name: 获取taskID和模板
  step:
    - keyWord: 获取所有的task_id
    - keyWord: 获取task模板
    - keyWord: 删除其他催单任务
    - keyWord: 使用模板新建一个task
    - keyWord: 开启催单任务

testMethod:
  - name: 开启任务补发
    severity: NORMAL
    step:
      - keyWord: 查看设置结果
        name: 获取设置结果
        extractor:
          - json:
              node_setting: $.data
      - keyWord: 开启多订单去重
        name: 开启任务补发
        body: |
          ${node_setting}
        bodyEditor:
          json:
            $.node_type: ${node_state}
            $.task_reissue: true
      - keyWord: 随机顾客发送消息给服务助手
      - keyWord: 模拟pulsar订单消息
      - keyWord: 获取催单消息-消息为空
      - keyWord: 根据订单查询trace
      - keyWord: 查看trace详情-TaskSetTimer
      - name: 获取timer
        url: /api/client/reminder/v2/test/timer
        untilWait: 5
        variables:
          platform: ${platform}
          shop_id: ${shop_id}
          timer_id: ${timer_id}
        method: GET
        extractor:
          - json:
              timer_setting_body: $
        assertion:
          - json:
              $.id: ${timer_id}
      - name: 重新设置timer
        url: /api/client/reminder/v2/test/timer
        untilWait: 5
        method: POST
        body: |
          ${timer_setting_body}
        assertion: [json: {$.code: 0}]
        bodyEditor:
          json:
            $.expired_at: ${__BeanShell(${__time(/1000)}+5,timer_expired_at)}
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第一次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==1)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==1)].timer_expired: ["${__BeanShell(${timer_expired_at}+600,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第二次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==2)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==2)].timer_expired: ["${__BeanShell(${timer_expired_at}+900,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第三次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==3)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==3)].timer_expired: ["${__BeanShell(${timer_expired_at}+900,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第四次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==4)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==4)].timer_expired: ["${__BeanShell(${timer_expired_at}+900,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第五次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==5)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==5)].timer_expired: ["${__BeanShell(${timer_expired_at}+3600,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 获取运行时状态
        name: 获取taskState运行时状态
        variables:
          task_id: ${task_id}
          order_id: ${order_id}
      - keyWord: 修改运行时状态
        name: 修改运行时状态-订单创建时间大于1小时
        bodyEditor:
          json:
            $.task.created_at: ${__BeanShell(${__time(/1000)}-7200,)}
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第六次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==6)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==6)].timer_expired: ["${__BeanShell(${timer_expired_at}+3600,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
        name: 重新设置第20次timer
        bodyEditor:
          json:
            $.expired_at: ${__BeanShell(${__time(/1000)}+5,timer_expired_at)}
            $.msg_retry_time: 20
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第20次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==20)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==20)].timer_expired: ["${__BeanShell(${timer_expired_at}+3600,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
        name: 重新设置第27次timer
        bodyEditor:
          json:
            $.expired_at: ${__BeanShell(${__time(/1000)}+5,timer_expired_at)}
            $.msg_retry_time: 27
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-第27次重试
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==27)].node_type: ["${node_state}"]
              $.data.traces[?(@.phase=='TaskSetTimer' && @.msg_retry_time==27)].timer_expired: ["${__BeanShell(${timer_expired_at}+3600,)}"]
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-TaskSetTimer
        name: 查看trace详情-超过重试次数
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskReject')].task_end_rule: [reach_retry_limit]
  - name: 关闭任务补发
    severity: NORMAL
    step:
      - keyWord: 获取设置结果
      - keyWord: 开启任务补发
        name: 关闭任务补发
        bodyEditor:
          json:
            $.node_type: ${node_state}
            $.task_reissue: false
      - keyWord: 随机顾客发送消息给服务助手
      - keyWord: 模拟pulsar订单消息
      - keyWord: 获取催单消息-消息为空
      - keyWord: 根据订单查询trace
      - keyWord: 查看trace详情-TaskSetTimer
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-第一次重试
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-第二次重试
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-第三次重试
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-第四次重试
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-超过重试次数
  - name: 任务超时时直接结束
    step:
      - keyWord: 随机顾客发送消息给服务助手
      - keyWord: 模拟pulsar订单消息
      - keyWord: 获取催单消息-消息为空
      - keyWord: 根据订单查询trace
      - keyWord: 查看trace详情-TaskSetTimer
      - keyWord: 获取taskState运行时状态
      - keyWord: 修改运行时状态
        name: 修改运行时状态-订单创建时间小于28小时
        bodyEditor:
          json:
            $.task.created_at: ${__BeanShell(${__time(/1000)}-28*60*60+60,)}
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情-第一次重试
      - keyWord: 获取taskState运行时状态
      - keyWord: 修改运行时状态
        name: 修改运行时状态-订单创建时间大于28小时
        bodyEditor:
          json:
            $.task.created_at: ${__BeanShell(${__time(/1000)}-28*60*60,)}
      - keyWord: 获取timer
      - keyWord: 重新设置timer
      - keyWord: 查看trace详情
        name: 查看trace详情-超时
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskPass')].task_pass_info: [send timeout]
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - keyWord: 根据订单查询trace
    - keyWord: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - keyWord: 删除催单任务
classHeartbeat:
  name: 心跳检测表示客服在线
  step:
    - keyWord: 主账号发送心跳检测