keyWord:
  step:
    - name: 获取MP后台地址
      url: /api/auth/mp_switcher
      variables:
        subnick: ${shopName}
      method: GET
      assertion:
        - json:
            $.code: 0
      extractor:
        - json:
            auth_url: $.url
    - name: 进入主页
      host: ""
      url: ${auth_url}
      method: GET
      responseType: DEFAULT
    - name: 获取shop_id
      url: /api/admin/user/logined
      method: GET
      extractor:
        - json:
            shop_id: $.user.shop_id
            shop_category_id: $.default_shop.category_id
          site: TESTSUIT
      assertion: [json: {$.code: 0}]
    - name: 获取子账号
      url: /api/admin/platform/search_client_configs_v3
      untilWait: 15
      variables:
        limit: 20
        skip: 0
        only_supplier: false
      method: GET
      extractor:
        - json:
            seller_name: $.subusers[?(@.auth_status==0)].sub_nick[0]
            child_seller: $.subusers[?(@.auth_status==1)].sub_nick[0]
            child_seller2: $.subusers[?(@.auth_status==1)].sub_nick[1]
            child_seller3: $.subusers[?(@.auth_status==1)].sub_nick[2]
          site: TESTSUIT
      assertion: [json: {$.code: 0}]
    - name: 催单设置为自己和静默
      url: /api/admin/user/shop_subnick_client_config_edit_v3
      headers:
        Content-Type: multipart/form-data
      untilWait: 15
      method: POST
      form:
        sub_nick: ${seller_name}
        reminder_type: mine,silence
      assertion: [json: {$.code: 0}]
    - keyWord: 催单设置为自己和静默
      name: 催单设置-子账号不催单
      form:
        sub_nick: ${child_seller}
        reminder_type: close
    - keyWord: 催单设置为自己和静默
      name: 催单设置-子账号3不催单
      form:
        sub_nick: ${child_seller3}
        reminder_type: close
    - name: 设置单个顾客单日最高催单数
      url: /api/admin/reminder/v2/manage/shop/setting
      method: POST
      body: |
        {"user_daily_limit":10000,"no_answer_filter":false,"task_remove_duplicates":false,"no_reception_silence_day":12,"user_list_trigger_enable":false,"basic_advanced":false}
      assertion: [json: {$.code: 0}]
    - name: 获取所有催单节点的task_id
      url: /api/admin/reminder/v2/manage/task/list
      variables:
        template_keys: 0
      method: GET
      assertion: [json: {$.code: 0}]
      extractor:
        - json:
            task_list: $.data.tasks[*].id
          size: 100
          options: [DEFAULT_PATH_LEAF_TO_NULL]
    - name: 子账号发送心跳检测
      url: /log/hb
      variables:
        spin: cntaobao${child_seller}
        platid: tb
        hangup: false
        platstatus: 1
        shopid: ${shop_id}
        version: 4.33.0
        sign: ${__HmacMD5(spin=cntaobao${child_seller})}
      method: GET
      assertion: [ json: { $.code: 0 } ]
    - name: 子账号3发送心跳检测
      keyWord: 子账号发送心跳检测
      variables:
        spin: cntaobao${child_seller3}
        sign: ${__HmacMD5(spin=cntaobao${child_seller3})}
    - name: 主账号发送心跳检测
      keyWord: 子账号发送心跳检测
      variables:
        spin: cntaobao${seller_name}
        sign: ${__HmacMD5(spin=cntaobao${seller_name})}
    - name: 获取task模板
      url: /api/admin/reminder/v2/manage/task/template
      variables:
        node_type: ${node_state}
        template_key: 0
      method: GET
      #断言响应体中jsonPath为$.code的值为0
      assertion: [json: {$.code: 0}]
      extractor:
        - json:
            #提取响应体中的task模板内容,保存为参数task_info
            task_info: $.data
    - name: 使用模板新建一个task
      url: /api/admin/reminder/v2/manage/task/create
      method: POST
      body: ${task_info}
      assertion: [json: {$.code: 0}]
      extractor:
        - json:
            task_id: $.data.id
    - name: 修改咨询未下单内容
      url: /api/admin/reminder/v2/manage/task/update
      method: POST
      #task_info为测试开始前获取到的任务模板
      body: ${task_info}
      #bodyEditor根据设置的jsonPath修改对应的参数
      bodyEditor:
        json:
          #id为beforeClass中提取到的task_id
          $.id: ${task_id}
          #开启任务
          $.enable: true
          #设置shop_id(配置文件中设置的)
          $.shop_id: ${shop_id}
          #设置消息发送时间为0,马上触发
          $.rules[?(@.type=='state_delay')].args.delay: 0
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='想要优惠')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='想要快点发货')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='想要快点发货')].replies:
            - ageing_id: ""
              message: 你好~喜欢就不要犹豫啦，下午6点前拍下并付款，快递当天就能来拿货，您的包裹将以最快的速度投奔到您的怀里
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='关注商品质量')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='想要包邮')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='想要赠品')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='关注快递类型')].enable: true
          $.rules[?(@.type=='send_message_by_intent')].args[?(@.intent=='关注快递类型')].replies:
            - ageing_id: ""
              message: 您好～喜欢就不要犹豫啦，我们会给您安排尽快发货，让你早点收到宝贝哦～
      assertion: [ json: { $.code: 0 } ]
    - name: 开启催单任务
      keyWord: 修改咨询未下单内容
      bodyEditor:
        json:
          $.id: ${task_id}
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: 0
          $.rules[?(@.type=='send_message')].args.message: ${message}
    - name: 关闭催单任务
      keyWord: 开启催单任务
      bodyEditor:
        json:
          $.id: ${task_id}
          $.enable: false
          $.shop_id: ${shop_id}
    - name: 获取催单消息
      url: /api/client/reminder/v2/client/reminder/messages
      untilWait: 15
      variables:
        shop_id: ${shop_id}
        seller_id: ${seller_name}
        platform: ${platform}
        service_names: reminder
        accept: tb/subscribe_card
      method: GET
      assertion:
        - json:
            $.data.messages[?(@.task_id=='${task_id}')].text_with_vars:
              - ${text_with_vars}
    - name: 获取催单消息-消息为空
      keyWord: 获取催单消息
      sleep: 200
      assertion:
        - json:
            $.data.messages[?(@.order_id=='${order_id}')].text_with_vars: []
    - name: 根据聊天记录查询trace
      url: /api/client/reminder/v2/trace/search
      variables:
        platform: ${platform}
        shop_id: ${shop_id}
        buyer_id: ${buyer_id}
        event_type: Chat-Message
        date: ${__time(yyyy-MM-dd,)}
      method: GET
      untilWait: 5
      extractor:
        - json:
            trace_id: $.data.traces[?(@.event_type=='Chat-Message')].trace_id[-1]
    - name: 根据订单查询trace
      url: /api/client/reminder/v2/trace/search/order
      variables:
        #platform在全局环境变量中设置
        platform: ${platform}
        #测试步骤中获取到的订单id
        order_id: ${order_id}
        shop_id: ${shop_id}
      method: GET
      #每0.5秒重试一次，10秒后仍没有获取到即不再获取，标记任务为失败
      untilWait: 10
      extractTaskState: true
      extractor:
        - json:
            #根据测试步骤中获取到的order_id获取trace_id
            trace_id: $.data.traces[?(@.order_state=='${order_state}')].trace_id
    - name: 查看trace详情
      #获取trace详情，会在测试报告中体现，用于定位任务为什么失败
      untilWait: 10
      url: /api/client/reminder/v2/trace/info
      variables:
        trace_id: ${trace_id}
        shop_id: ${shop_id}
      method: GET
    - name: 查看trace详情-任务关闭
      keyWord: 查看trace详情
      assertion:
        - json:
            $.data.traces.length(): 1
    - keyWord: 开启催单任务
      name: 开启催单任务-设置消息延迟
      bodyEditor:
        json:
          $.id: ${task_id}
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: ${__BeanShell(${state_delay},)}
          $.rules[?(@.type=='send_message')].args.message: ${message}
    - keyWord: 查看trace详情
      name: 查看trace详情-TaskSetTimer
      assertion:
        - json:
            $.data.traces[?(@.phase=='TaskSetTimer')].node_type: ["${node_state}"]
      extractor:
        - json:
            timer_id: $.data.traces[?(@.phase=='TaskSetTimer')].timer_id[-1]
    - keyWord: 获取催单消息
      name: 获取催单消息-5秒拉一次
      untilWait: 120
      intervals: 5000
      sleep: 15000
    - name: 删除催单任务
      url: /api/admin/reminder/v2/manage/task/delete
      method: POST
      body: |
        {"id":"${task_id}"}
    - keyWord: 开启催单任务
      name: 开启催单任务-包含图片
      bodyEditor:
        json:
          $.id: ${task_id}
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: 0
          $.rules[?(@.type=='send_message')].args.message: ${message}
          $.rules[?(@.type=='send_message')].args.images:
            - id: 5dbbd61a9e3aad000d7de9fe
              url: https://xdmp-new.oss-cn-hangzhou.aliyuncs.com/answer_pics/eb1ddc7854a747ba9cfb8424c151ae04.jpg
    - keyWord: 获取催单消息
      name: 获取催单消息-包含图片
      assertion:
        - json:
            $.data.messages[?(@.order_id=='${order_id}')].text_with_vars:
              - ${text_with_vars}
            $.data.messages[?(@.order_id=='${order_id}')].images..id: [ 5dbbd61a9e3aad000d7de9fe ]
            $.data.messages[?(@.order_id=='${order_id}')].images..url: [ https://xdmp-new.oss-cn-hangzhou.aliyuncs.com/answer_pics/eb1ddc7854a747ba9cfb8424c151ae04.jpg ]
    - name: 模拟pulsar订单消息
      url: /api/client/reminder/v2/test/send?is_test=false&queue_type=0
      method: POST
      body: |
        {"platform":"${platform}","shop_id":"${shop_id}","payment":20,"created_at":${__time(/1000,)},"updated_at":${__time(/1000,)},"address":"四川省桂溪街道天府软件园A5-8","item_ids":["604423906694"],"tbext":{"items":[{"item_id":"604423906694","item_name":"二手铅笔","count":1}],"receiver":{"name":"王健强","zip":"000000"}}}
      sleep: 1000 #等待oplog服务
      bodyEditor:
        json:
          $.order_id: ${__RandomOrderId(order_id)}
          $.buyer_id: ${buyer_id}
          $.status: ${order_state}
          $.tbext.buyer_nick: ${buyer_id}
          $.tbext.original_order: >-
            {"adjust_fee":"0.00","buyer_cod_fee":"0.00","buyer_nick":"${buyer_id}","buyer_open_uid":"AAGdHqFhAAgoIdPNSTRGF2WJ","buyer_rate":false,"coupon_fee":0,"created":"${__timeShift(yyyy-MM-dd HH:mm:ss,,,zh_CN,everyday_start_time)}","discount_fee":"0.00","est_con_time":"付款后45天内","is_gift":false,"is_sh_ship":false,"modified":"${__timeShift(yyyy-MM-dd HH:mm:ss,,,zh_CN,everyday_start_time)}","new_presell":false,"nr_shop_guide_id":"","nr_shop_guide_name":"","num":1,"num_iid":604423906694,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":false,"cid":50024657,"discount_fee":"0.00","estimate_con_time":"付款后45天内","is_daixiao":false,"is_oversold":false,"num":1,"num_iid":604423906694,"oid":"${order_id}","oid_str":"${order_id}","order_from":"TAOBAO","payment":"20.00","pic_path":"https://img.alicdn.com/bao/uploaded/i3/1740721126/O1CN01PUtjEb1KBkX6UpzOm_!!1740721126.jpg","price":"10.00","refund_status":"NO_REFUND","seller_rate":false,"seller_type":"C","snapshot_url":"q:${order_id}_1","status":"WAIT_BUYER_PAY","title":"二手铅笔","total_fee":"10.00"}]},"payment":"20.00","pic_path":"https://img.alicdn.com/bao/uploaded/i3/1740721126/O1CN01PUtjEb1KBkX6UpzOm_!!1740721126.jpg","platform_subsidy_fee":"0.00","post_fee":"10.00","price":"10.00","received_payment":"0.00","receiver_address":"桂溪街道天府软件园A5-8","receiver_city":"成都市","receiver_country":"","receiver_district":"武侯区","receiver_mobile":"17721883949","receiver_name":"王健强","receiver_state":"四川省","receiver_town":"桂溪街道","receiver_zip":"000000","seller_flag":0,"seller_nick":"wangjq_1990","seller_rate":false,"service_tags":{"logistics_tag":[{"logistic_service_tag_list":{"logistic_service_tag":[{"service_tag":"origAreaId=510107;consignDate=1080","service_type":"TB_CONSIGN_DATE"},{"service_tag":"lgType=-4","service_type":"FAST"}]},"order_id":"${order_id}"},{"logistic_service_tag_list":{"logistic_service_tag":[{"service_tag":"consignDate=1080","service_type":"TB_CONSIGN_DATE"}]},"order_id":"${order_id}"}]},"service_type":"","shipping_type":"express","status":"WAIT_BUYER_PAY","tid":"${order_id}","tid_str":"${order_id}","title":"测试店铺Gerow","total_fee":"10.00","trade_from":"TAOBAO","type":"fixed","you_xiang":false}
    - name: 发送物流消息
      url: /api/client/reminder/v2/test/send?is_test=false&queue_type=1
      method: POST
      body: |
        {"tid":${order_id},
         "action":"${action}",
         "out_sid":"${__RandomOrderId(out_sid)}",
         "shop_id":"${shop_id}",
         "buyer_id":"${buyer_id}"}
    - name: 模拟pulsar聊天消息
      url: /api/client/reminder/v2/test/send?is_test=false&queue_type=2
      method: POST
      body: >-
        {"_id":"${__RandomString(24,abcdef1234567890,)}","act":"recv_msg","answer_explain":"开始语（你好等）","create_time":"2021-01-18 14:12:46.741552","employee_name":"kfa","employee_role":"20","intent":[[3,0.9999101161956787],[0,0.00008643833280075341],[170001,0.0000018750564549918636]],"is_compare_replies ":0,"is_enter_shop_card":false,"mode":"SEND","mp_category":"nvz","mp_version":5,"ms_msg_time":0,"msg":"你好","msg_time":1610950369,"msgid":"${__time()}${__RandomString(3,1234567890,)}","no_reply_reason":1,"no_reply_sub_reason":2,"pic_url":"","plat_msg_id":"","qa_id":"600526de101b5a0001b23b45","question_b":{"proba":0.9999101161956787,"qid":3,"standard_q":"开始语（你好等）"},"question_type":9,"remind_answer":"美女 , 我{分行发送↓}1111","send_msg_from":2}
      bodyEditor:
        json:
          $.shop_id: ${shop_id}
          $.platform: ${platform}
          $.snick: ${seller_name}
          $.cnick: ${__RandomName(buyer_id)}
          $.msg_time: ${__BeanShell(${__time(/1000)},task_created_at)}
    - name: 推送评价消息
      url: /api/client/reminder/v2/test/send?is_test=false&queue_type=3
      method: POST
      body: >-
        {"platform":"${platform}","shop_id":"${shop_id}","trade_id":"${order_id}","role":"buyer","result":"${rate_result}","nick":"${buyer_id}","rated_nick":"wangjq_1990","content":"有点差","valid_score":false,"created":"2019-12-24 19:25:31","item_price":"9.99","item_title":"N手烂笔芯","num_iid":609803021235,"oid":"${order_id}","tid":"${order_id}","is_valid":true}
      bodyEditor:
        json:
          $.rate: ${__BeanShell(${rate_code})}
    - name: 推送退款消息-指定退款类型
      url: /api/client/reminder/v2/test/send?is_test=false&queue_type=4
      method: POST
      body: >-
        {"refund_fee":"0.01","refund_phase":"onsale","bill_type":"return_bill","seller_nick":"${shopName}","modified":"2019-12-06 17:33:10.21"}
      bodyEditor:
        json:
          $.buyer_nick: ${buyer_id}
          $.buyer_id: ${buyer_id}
          $.tid: ${__BeanShell(${order_id}l,)}
          $.oid: ${__BeanShell(${order_id}l,)}
          $.refund_id: ${__BeanShell(${__RandomOrderId(refund_id)}l,)}
          $.channel: ${refund_state}
          $.reason: 多拍/错拍/不想要
          $.bill_type: ${bill_type}
    - keyWord: 发送消息给商家
      name: 随机顾客发送消息给商家-固定问题
      bodyEditor:
        json:
          $.pin: cntaobao${__RandomName(buyer_id)}
          $.q: ${__DES3Cipher(你好,,)}