name: 消息发送延时设置
platform: 融合版
story: ${reminder_type}
dataProvider:
  - node_state: logistics_stagnate_delay
    order_state: arrival
    message: 很抱歉，由于快递公司的原因，您的物流行进缓慢，我们会尽力督促快递公司，让您今早收到宝贝
    text_with_vars: ${message}
    reminder_type: 物流停滞超时
    action: ARRIVAL
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task
testMethod:
  - name: 设置${state_delay}秒后发送催单消息
    dataProvider:
      - state_delay: 20
      - state_delay: 60
#      - state_delay: 120
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 开启物流停滞超时催单任务-设置消息发送时间
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_state_delay_message')].args.state_delay: ${__BeanShell(${state_delay},)}
            $.rules[?(@.type=='send_state_delay_message')].args.message: ${message}
      - byName: 随机顾客推送已付款订单消息
      - byName: 发送物流消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 获取任务触发时间
      - byName: 校验TaskSetTimer正确
      - byName: 获取催单消息
        untilWait: 120
        intervals: 5000
        sleep: 15
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务