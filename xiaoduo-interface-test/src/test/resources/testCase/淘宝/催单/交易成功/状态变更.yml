name: 状态变更
story: ${reminder_type}
dataProvider:
  - node_state: succeeded
    order_state: succeeded
    message: 小店收到飞鸽传书，得知您的宝贝已经安全抵达。有任何疑问欢迎咨询我们。如果您对这次购物体验满意，期待得到您的评价鼓励，一路相知，伴随左右~
    text_with_vars: ${message}
    reminder_type: 交易成功
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task
testMethod:
  - name: 状态变更为-${new_type_name}
    dataProvider:
      - new_order_state: closed
        new_type_name: 交易取消
    description: |
      """</br>
      用例描述：</br>
      1、开启任务会触发。</br>
      </br>
      测试步骤</br>
      1、开启任务</br>
      2、创建订单</br>
      3、建议订单trace是否已经settimer</br>
      4、将订单状态变更为${new_type_name}</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 开启交易成功催单任务
        name: 开启交易成功催单任务-10秒后发送
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: 10
            $.rules[?(@.type=='specify_send_seller')].args.status: 2
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='specify_send_time_range')].args.ranges: [{"from":0, "to":86399 }]
      - byName: 发送消息给商家-固定问题
      - byName: 通过pulsar推送订单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 通过pulsar推送订单消息-状态变更
      - byName: 获取催单消息-消息为空
      - byName: 查看trace详情-订单状态变更
  - name: 状态变更为-买家给${rate_name}
    dataProvider:
      - rate_result: bad
        rate_code: -1
        rate_name: 差评
      - rate_result: neutral
        rate_code: 0
        rate_name: 中评
      - rate_result: good
        rate_code: 1
        rate_name: 好评
    description: |
      """</br>
      用例描述：</br>
      1、开启任务会触发。</br>
      </br>
      测试步骤</br>
      1、开启任务</br>
      2、创建订单</br>
      3、建议订单trace是否已经settimer</br>
      4、买家给${rate_name}</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 开启交易成功催单任务-10秒后发送
      - byName: 发送消息给商家-固定问题
      - byName: 通过pulsar推送订单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 推送评价消息
      - byName: 获取催单消息-消息为空
      - byName: 查看trace详情
        name: 查看trace详情-已评价
        untilWait: 10
        assertion:
          - json:
              $.data.traces[?(@.phase == 'TaskReject')].task_end_rule: [has_success_rate_filter]
  - name: 状态变更为-${refund_state_name}
    enable: false
    dataProvider:
      - refund_state: taobao_refund_RefundCreated
        refund_state_name: 买家申请退款
      - refund_state: taobao_refund_RefundSellerAgreeAgreement
        refund_state_name: 卖家同意退款
      - refund_state: taobao_refund_RefundSuccess
        refund_state_name: 退款成功
    description: |
      """</br>
      用例描述：</br>
      1、开启任务会触发。</br>
      </br>
      测试步骤</br>
      1、开启任务</br>
      2、创建订单</br>
      3、建议订单trace是否已经settimer</br>
      4、买家申请退款</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 开启交易成功催单任务-10秒后发送
      - byName: 发送消息给商家-固定问题
      - byName: 通过pulsar推送订单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 推送退款消息
      - byName: 获取催单消息-消息为空
      - byName: 查看trace详情
        name: 查看trace详情-已评价
        untilWait: 10
        assertion:
          - json:
              $.data.traces[?(@.phase == 'TaskSetTimer')].timer_expired:
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务