name: 申请售后
story: ${reminder_type}
dataProvider:
  - node_state: paid
    order_state: paid
    message: 亲，您的订单已经收到，感谢您对我们的支持，我们将尽快为您发出！
    text_with_vars: ${message}
    reminder_type: 已付款
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task
beforeMethod:
  name: 测试前拉一下消息表示在线
  step:
    - byName: 拉一下催单消息
testMethod:
  - name: 状态变更为-${refund_name}
    dataProvider:
      - refund_name: 申请售后
        refund_state: taobao_refund_RefundCreated
        refund_type: created
      - refund_state: taobao_refund_RefundSellerAgreeAgreement
        refund_name: 同意退货
        refund_type: agreed
      - refund_state: taobao_refund_RefundSuccess
        refund_name: 退款成功
        refund_type: succeeded
      - refund_state: taobao_refund_RefundBuyerReturnGoods
        refund_name: 买家发货
        refund_type: return_goods
    severity: NORMAL
    step:
      - byName: 开启催单任务-10秒后触发
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 推送退款消息
      - byName: 获取催单消息-消息为空
      - byName: 查看trace详情
        name: 查看trace详情-有售后状态不催单
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskReject')].task_reject_reason: ["has refund,refund state:${refund_type},sub_order:"]
  - name: 取消退款-仍然发催单消息
    dataProvider:
      - refund_state: taobao_refund_RefundClosed
        refund_name: 退款关闭
    severity: NORMAL
    step:
      - byName: 开启催单任务-10秒后触发
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 推送退款消息
      - byName: 获取催单消息
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务