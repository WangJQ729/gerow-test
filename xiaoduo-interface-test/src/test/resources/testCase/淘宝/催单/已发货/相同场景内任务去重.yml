name: 相同场景内任务去重
story: ${reminder_type}
invocationCount: 1
dataProvider:
  - message2: 第二个任务哦!
    text_with_vars2: ${message2}
    dataProvider:
      - node_state: shipped
        order_state: shipped
        message: 亲，您订购的宝贝已经启程了，请注意物流查收哦，记得好评哦！
        text_with_vars: ${message}
        reminder_type: 已发货
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - name: 使用模板新建第一个已发货催单任务
      byName: 使用模板新建一个task
      bodyEditor:
        json:
          $.name: 第一个任务
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_shipped_message')].args.no_consign_part.state_delay: 0
          $.rules[?(@.type=='send_shipped_message')].args.no_consign_part.message: ${message}
      extractor:
        - json:
            task_id_1: $.data.id
    - name: 使用模板新建第二个已发货催单任务
      byName: 使用模板新建一个task
      bodyEditor:
        json:
          $.name: 第二个任务
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_shipped_message')].args.no_consign_part.state_delay: 0
          $.rules[?(@.type=='send_shipped_message')].args.no_consign_part.message: ${message2}
      extractor:
        - json:
            task_id_2: $.data.id
beforeMethod:
  name: 测试前拉一下消息表示在线
  step:
    - byName: 主账号发送心跳检测
testMethod:
  - name: 关闭相同场景内任务去重
    severity: NORMAL
    step:
      - byName: 开启多订单去重
      - byName: 拉一下催单消息
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 指定顾客指定订单推送已发货订单消息
      - byName: 获取到2条催单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message[?(@.task_id=='${task_id_1}')].text: ["${message}"]
              $.data.traces[?(@.phase=='SendToClient')].message[?(@.task_id=='${task_id_2}')].text: ["${message2}"]
  - name: 开启相同场景内任务去重-全部任务都满足-只催第一个
    severity: NORMAL
    step:
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第一个任务在前
      - byName: 断言修改后的顺序是否正确
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 指定顾客指定订单推送已发货订单消息
      - byName: 获取催单消息
        assertion:
          - json:
              $.data.messages[?(@.task_id=='${task_id_1}')].text_with_vars:
                - ${text_with_vars}
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message}"]
  - name: 开启相同场景内任务去重-全部任务都满足-调整顺序
    severity: NORMAL
    step:
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第二个任务在前
      - byName: 断言修改后的顺序是否正确
        assertion:
          - json:
              $.data.tasks[0].id: ${task_id_2}
              $.data.tasks[1].id: ${task_id_1}
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 指定顾客指定订单推送已发货订单消息
      - byName: 获取催单消息-第二个任务
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message2}"]
  - name: 开启相同场景内任务去重-不满足第一个应该催第二个
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 修改第一个已发货催单任务为金额圈定0-0.01元
        bodyEditor:
          json:
            $.id: ${task_id_1}
            $.name: 第一个任务
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_shipped_message')].args.no_consign_part.state_delay: 0
            $.rules[?(@.type=='send_shipped_message')].args.no_consign_part.message: ${message}
            $.rules[?(@.type=='pay_amount_limit')].args.enable: true
            $.rules[?(@.type=='pay_amount_limit')].args.min: 0
            $.rules[?(@.type=='pay_amount_limit')].args.max: 1
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第一个任务在前
      - byName: 断言修改后的顺序是否正确
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 指定顾客指定订单推送已发货订单消息
      - byName: 获取催单消息-第二个任务
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskReject')].task_end_rule: [pay_amount_limit]
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message2}"]
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 获取所有的task_id
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务
      dataProvider:
        - task_id: ${task_id_1}
        - task_id: ${task_id_2}