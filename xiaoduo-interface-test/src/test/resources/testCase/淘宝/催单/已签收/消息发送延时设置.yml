name: 消息发送延时设置
story: ${reminder_type}
dataProvider:
  - node_state: signed
    order_state: signed
    message: 您在本店购买的商品已签收，如确认包裹和商品没有问题请记得确认收货哦~ 如有问题我们将竭诚为您服务
    text_with_vars: ${message}
    reminder_type: 已签收
    action: SIGNED
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task
beforeMethod:
  name: 测试前拉一下消息表示在线
  step:
    - byName: 主账号发送心跳检测
testMethod:
  - name: 设置${state_delay}秒后发送催单消息
    dataProvider:
      - state_delay: 20
#      - state_delay: 60
#      - state_delay: 120
    description: |
      """</br>
      用例描述：</br>
      1、测试消息发送延时是否正确。</br>
      </br>
      测试步骤</br>
      1、设置${state_delay}秒后发送催单消息</br>
      2、创建订单</br>
      3、获取催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 开启已签收催单任务-设置消息延迟
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: ${__BeanShell(${state_delay},)}
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='specify_send_time_range')].args.ranges: [{"from":0, "to":86399 }]
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 发送物流消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情-TaskSetTimer
      - byName: 查看trace详情
        name: 获取任务触发时间
        extractor:
          - json:
              task_created_at: $.data.traces[?(@.phase=='TriggerTask')].task_created_at
      - byName: 查看trace详情
        name: 校验TaskSetTimer正确
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer')].timer_expired: ["${__BeanShell(${task_created_at}+${state_delay},)}"]
            valueType: BIGDECIMAL
      - byName: 获取催单消息-5秒拉一次
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务