name: 相同场景内任务去重
story: ${reminder_type}
invocationCount: 1
dataProvider:
  - node_state: signed
    order_state: signed
    message: 您在本店购买的商品已签收，如确认包裹和商品没有问题请记得确认收货哦~ 如有问题我们将竭诚为您服务
    text_with_vars: ${message}
    message2: 第二个任务哦!
    text_with_vars2: ${message2}
    reminder_type: 已签收
    action: SIGNED
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建第一个task
      bodyEditor:
        json:
          $.name: 第一个任务
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: 0
          $.rules[?(@.type=='send_message')].args.message: ${message}
          $.rules[?(@.type=='specify_send_time_range')].args.ranges: [{"from":0, "to":86399 }]
    - byName: 使用模板新建第二个task
      bodyEditor:
        json:
          $.name: 第二个任务
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: 0
          $.rules[?(@.type=='send_message')].args.message: ${message2}
          $.rules[?(@.type=='specify_send_time_range')].args.ranges: [{"from":0, "to":86399 }]
beforeMethod:
  name: 测试前拉一下消息表示在线
  step:
    - byName: 拉一下催单消息
testMethod:
  - name: 关闭相同场景内任务去重
    description: |
      """</br>
      用例描述：</br>
      1、关闭相同场景内任务去重。</br>
      </br>
      测试步骤</br>
      1、关闭相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、创建1个订单</br>
      4、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 关闭相同场景内任务去重
      - byName: 拉一下催单消息
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 发送物流消息
      - byName: 获取到2条催单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message[?(@.task_id=='${task_id_1}')].text: ["${message}"]
              $.data.traces[?(@.phase=='SendToClient')].message[?(@.task_id=='${task_id_2}')].text: ["${message2}"]
  - name: 开启相同场景内任务去重-全部任务都满足-只催第一个
    description: |
      """</br>
      用例描述：</br>
      1、开启相同场景内任务去重，只催第一个任务。</br>
      </br>
      测试步骤</br>
      1、开启相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、创建1个订单，同时满足1、2条件</br>
      4、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第一个任务在前
      - byName: 断言修改后的顺序是否正确
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 发送物流消息
      - byName: 获取催单消息
        assertion:
          - json:
              $.data.messages[?(@.task_id=='${task_id_1}')].text_with_vars:
                - ${text_with_vars}
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message}"]
  - name: 开启相同场景内任务去重-全部任务都满足-调整顺序
    description: |
      """</br>
      用例描述：</br>
      1、开启相同场景内任务去重，只催第一个任务。</br>
      </br>
      测试步骤</br>
      1、开启相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、调整一下顺序
      4、创建1个订单，同时满足1、2条件</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第二个任务在前
      - byName: 断言修改后的顺序是否正确
        assertion:
          - json:
              $.data.tasks[0].id: ${task_id_2}
              $.data.tasks[1].id: ${task_id_1}
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 发送物流消息
      - byName: 获取催单消息-第二个任务
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message2}"]
  - name: 开启相同场景内任务去重-不满足第一个应该催第二个
    description: |
      """</br>
      用例描述：</br>
      1、开启相同场景内任务去重，只催满足任务。</br>
      </br>
      测试步骤</br>
      1、开启相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、调整一下顺序
      4、创建1个订单，只满足2条件</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 修改第一个催单任务为金额圈定0-0.01元
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第一个任务在前
      - byName: 断言修改后的顺序是否正确
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息
      - byName: 发送物流消息
      - byName: 获取催单消息-第二个任务
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskReject')].task_end_rule: [pay_amount_limit]
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message2}"]
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 获取所有的task_id
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务
      dataProvider:
        - task_id: ${task_id_1}
        - task_id: ${task_id_2}