name: 金额限制
story: ${reminder_type}
dataProvider:
  - node_state: signed
    order_state: signed
    message: 您在本店购买的商品已签收，如确认包裹和商品没有问题请记得确认收货哦~ 如有问题我们将竭诚为您服务
    text_with_vars: ${message}
    reminder_type: 已签收
    action: SIGNED
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task

testMethod:
  - name: 金额限制-满足-${payment}
    dataProvider:
      - payment: 5
#      - payment: 5.01
#      - payment: 19.99
      - payment: 20
    description: |
      """</br>
      用例描述：</br>
      1、满足金额限制的订单应该被触发。</br>
      </br>
      测试步骤</br>
      1、设置金额限制为5-20元</br>
      2、创建${payment}元的订单</br>
      3、校验催单信息</br>
      4、校验traces</br>
      """
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 设置金额限制为5-20元-已签收
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: 0
            $.rules[?(@.type=='specify_send_seller')].args.status: 2
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='pay_amount_limit')].args.enable: true
            $.rules[?(@.type=='pay_amount_limit')].args.min: 5
            $.rules[?(@.type=='pay_amount_limit')].args.max: 20
            $.rules[?(@.type=='specify_send_time_range')].args.ranges: [{"from":0, "to":86399 }]
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息-指定金额
      - byName: 发送物流消息
      - byName: 获取催单消息
  - name: 金额限制-不满足-${payment}
    dataProvider:
      - payment: 4.99
      - payment: 20.01
    description: |
      """</br>
      用例描述：</br>
      1、不满足金额限制的订单不应该被触发。</br>
      </br>
      测试步骤</br>
      1、设置金额限制为5-20元</br>
      2、创建${payment}元的订单</br>
      3、校验催单信息</br>
      4、校验traces</br>
      """
    severity: NORMAL
    step:
      - byName: 设置金额限制为5-20元-已签收
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息-指定金额
      - byName: 发送物流消息
      - byName: 获取催单消息-消息为空
      - byName: 根据订单查询trace
      - byName: 查看trace详情-不满足金额圈定
  - name: 金额限制-关闭-${payment}
    dataProvider:
      - payment: 4.99
      - payment: 5
#      - payment: 5.01
#      - payment: 19.99
#      - payment: 20
#      - payment: 20.01
    description: |
      """</br>
      用例描述：</br>
      1、关闭金额限制后，所有金额的订单都会触发。</br>
      </br>
      测试步骤</br>
      1、设置金额限制为5-20元</br>
      2、创建${payment}元的订单</br>
      3、校验催单信息</br>
      4、校验traces</br>
      """
    severity: NORMAL
    step:
      - byName: 设置金额限制为5-20元-已签收
        name: 设置金额限制为5-20元-已签收-关闭任务
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: 0
            $.rules[?(@.type=='specify_send_seller')].args.status: 2
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='pay_amount_limit')].args.enable: false
            $.rules[?(@.type=='pay_amount_limit')].args.min: 5
            $.rules[?(@.type=='pay_amount_limit')].args.max: 20
            $.rules[?(@.type=='specify_send_time_range')].args.ranges: [{"from":0, "to":86399 }]
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 指定顾客推送已付款订单消息-指定金额
      - byName: 发送物流消息
      - byName: 获取催单消息
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务