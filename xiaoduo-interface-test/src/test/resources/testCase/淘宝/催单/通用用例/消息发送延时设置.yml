name: 消息发送延时设置
story: ${reminder_type}
dataProvider:
  - node_state: created
    order_state: created
    message: 您好，您还有订单米有付款捏，要抓紧时间支付哦，小妹好给您优先尽快发出哦~让您美美的早些收到哦~
    text_with_vars: ${message}
    reminder_type: 下单未付款
  - node_state: deposited
    order_state: deposited
    message: defualt message!
    text_with_vars: ${message}
    reminder_type: 已付定金未付尾款
  - node_state: shipped_delay
    order_state: paid
    message: 由于近期订单量过大，发货小妹没能及时给您发货，实在抱歉。麻烦您耐心等待，小妹会尽快安排给您优先发货呢！
    text_with_vars: ${message}
    reminder_type: 发货超时
  - node_state: send_scan
    order_state: send_scan
    message: 您的快递已经派件了！收货时，请检查快递的外包装是否完整，当场验货确认无误后，再签收哦！
    text_with_vars: ${message}
    reminder_type: 验收提醒
  - node_state: paid
    order_state: paid
    message: 亲，您的订单已经收到，感谢您对我们的支持，我们将尽快为您发出！
    text_with_vars: ${message}
    reminder_type: 已付款
  - node_state: closed
    order_state: closed
    message: 亲，您对宝贝有什么不满意的吗？
    text_with_vars: ${message}
    reminder_type: 交易取消
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task
beforeMethod:
  name: 测试前拉一下消息表示在线
  step:
    - byName: 拉一下催单消息
testMethod:
  - name: 设置${state_delay}秒后发送催单消息
    dataProvider:
      - state_delay: 20
#      - state_delay: 60
#      - state_delay: 120
    description: |
      """</br>
      用例描述：</br>
      1、测试消息发送延时是否正确。</br>
      </br>
      测试步骤</br>
      1、设置${state_delay}秒后发送催单消息</br>
      2、创建订单</br>
      3、获取催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 开启催单任务-设置消息延迟
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: ${__BeanShell(${state_delay},)}
            $.rules[?(@.type=='send_message')].args.message: ${message}
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        name: 查看trace详情-TaskSetTimer
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskSetTimer')].node_type: ["${node_state}"]
      - byName: 获取任务触发时间
      - byName: 校验TaskSetTimer正确
      - byName: 获取催单消息
        name: 获取催单消息-5秒拉一次
        untilWait: 120
        intervals: 5000
        sleep: 15000
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务