name: 相同场景内任务去重
story: ${reminder_type}
invocationCount: 1
dataProvider:
  - message2: 第二个任务哦!
    text_with_vars2: ${message2}
    dataProvider:
      - node_state: created
        order_state: created
        message: 您好，您还有订单米有付款捏，要抓紧时间支付哦，小妹好给您优先尽快发出哦~让您美美的早些收到哦~
        text_with_vars: ${message}
        reminder_type: 下单未付款
      - node_state: checkaddr
        order_state: created
        message: 亲，您的订单已经收到，请核对以下信息是否正确，我们将尽快为您发出！
        text_with_vars: ${message}
        reminder_type: 核对地址
      - node_state: deposited
        order_state: deposited
        message: defualt message!
        text_with_vars: ${message}
        reminder_type: 已付定金未付尾款
      - node_state: paid
        order_state: paid
        message: 亲，您的订单已经收到，感谢您对我们的支持，我们将尽快为您发出！
        text_with_vars: ${message}
        reminder_type: 已付款
      - node_state: shipped_delay
        order_state: paid
        message: 由于近期订单量过大，发货小妹没能及时给您发货，实在抱歉。麻烦您耐心等待，小妹会尽快安排给您优先发货呢！
        text_with_vars: ${message}
        reminder_type: 发货超时
      - node_state: send_scan
        order_state: send_scan
        message: 您的快递已经派件了！收货时，请检查快递的外包装是否完整，当场验货确认无误后，再签收哦！
        text_with_vars: ${message}
        reminder_type: 验收提醒
      - node_state: closed
        order_state: closed
        message: 亲，您对宝贝有什么不满意的吗？
        text_with_vars: ${message}
        reminder_type: 交易取消
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - name: 使用模板新建第一个task
      byName: 使用模板新建一个task
      bodyEditor:
        json:
          $.name: 第一个任务
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: 0
          $.rules[?(@.type=='send_message')].args.message: ${message}
      extractor:
        - json:
            task_id_1: $.data.id
    - name: 使用模板新建第二个task
      byName: 使用模板新建一个task
      bodyEditor:
        json:
          $.name: 第二个任务
          $.enable: true
          $.shop_id: ${shop_id}
          $.rules[?(@.type=='send_message')].args.state_delay: 0
          $.rules[?(@.type=='send_message')].args.message: ${message2}
      extractor:
        - json:
            task_id_2: $.data.id

testMethod:
  - name: 关闭相同场景内任务去重
    description: |
      """</br>
      用例描述：</br>
      1、关闭相同场景内任务去重。</br>
      </br>
      测试步骤</br>
      1、关闭相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、创建1个订单</br>
      4、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - name: 关闭相同场景内任务去重
        byName: 开启多订单去重
        body: |
          {"task_remove_duplicates":false,"node_type":"${node_state}"}
      - byName: 拉一下催单消息
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 拉一下催单消息
        name: 获取到2条催单消息
        assertion:
          - total:
              $.data.messages.length(): 2
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message[?(@.task_id=='${task_id_1}')].text: ["${message}"]
              $.data.traces[?(@.phase=='SendToClient')].message[?(@.task_id=='${task_id_2}')].text: ["${message2}"]
  - name: 开启相同场景内任务去重-全部任务都满足-只催第一个
    description: |
      """</br>
      用例描述：</br>
      1、开启相同场景内任务去重，只催第一个任务。</br>
      </br>
      测试步骤</br>
      1、开启相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、创建1个订单，同时满足1、2条件</br>
      4、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 拉一下催单消息
      - name: 开启相同场景内任务去重
        byName: 关闭相同场景内任务去重
        bodyEditor:
          json:
            $.task_remove_duplicates: true
      - name: 设置第一个任务在前
        sleep: 2000
        url: /api/admin/reminder/v2/manage/task/update_weight
        method: POST
        body: |
          {
              "ids":[
                  "${task_id_1}",
                  "${task_id_2}"
              ]
          }
        assertion: [json: {$.code: 0}]
      - byName: 获取所有的task_id
        name: 断言修改后的顺序是否正确
        untilWait: 5
        sleep: 2000
        assertion:
          - json:
              $.data.tasks[0].id: ${task_id_1}
              $.data.tasks[1].id: ${task_id_2}
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 获取催单消息
        assertion:
          - json:
              $.data.messages[?(@.task_id=='${task_id_1}')].text_with_vars:
                - ${text_with_vars}
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message}"]
  - name: 开启相同场景内任务去重-全部任务都满足-调整顺序
    description: |
      """</br>
      用例描述：</br>
      1、开启相同场景内任务去重，只催第一个任务。</br>
      </br>
      测试步骤</br>
      1、开启相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、调整一下顺序
      4、创建1个订单，同时满足1、2条件</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第一个任务在前
        name: 设置第二个任务在前
        body: |
          {
              "ids":[
                  "${task_id_2}",
                  "${task_id_1}"
              ]
          }
      - byName: 断言修改后的顺序是否正确
        assertion:
          - json:
              $.data.tasks[0].id: ${task_id_2}
              $.data.tasks[1].id: ${task_id_1}
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 获取催单消息
        name: 获取催单消息-第二个任务
        assertion:
          - json:
              $.data.messages[?(@.task_id=='${task_id_2}')].text_with_vars:
                - ${text_with_vars2}
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message2}"]
  - name: 开启相同场景内任务去重-不满足第一个应该催第二个
    description: |
      """</br>
      用例描述：</br>
      1、开启相同场景内任务去重，只催满足任务。</br>
      </br>
      测试步骤</br>
      1、开启相同场景内任务去重</br>
      2、创建2个催单任务</br>
      3、调整一下顺序
      4、创建1个订单，只满足2条件</br>
      5、校验催单消息</br>
      """
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 修改第一个催单任务为金额圈定0-0.01元
        bodyEditor:
          json:
            $.id: ${task_id_1}
            $.name: 第一个任务
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: 0
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='pay_amount_limit')].args.enable: true
            $.rules[?(@.type=='pay_amount_limit')].args.min: 0
            $.rules[?(@.type=='pay_amount_limit')].args.max: 1
      - byName: 拉一下催单消息
      - byName: 开启相同场景内任务去重
      - byName: 设置第一个任务在前
      - byName: 断言修改后的顺序是否正确
      - byName: 随机顾客发送消息给商家-固定问题
      - byName: 模拟pulsar订单消息
      - byName: 获取催单消息-第二个任务
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskReject')].task_end_rule: [pay_amount_limit]
              $.data.traces[?(@.phase=='SendToClient')].message.text: ["${message2}"]
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 获取所有的task_id
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务
      dataProvider:
        - task_id: ${task_id_1}
        - task_id: ${task_id_2}