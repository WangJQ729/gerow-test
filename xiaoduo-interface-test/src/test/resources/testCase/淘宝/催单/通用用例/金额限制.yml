name: 金额限制
story: ${reminder_type}
dataProvider:
  - node_state: created
    order_state: created
    message: 您好，您还有订单米有付款捏，要抓紧时间支付哦，小妹好给您优先尽快发出哦~让您美美的早些收到哦~
    text_with_vars: ${message}
    reminder_type: 下单未付款
  - node_state: checkaddr
    order_state: created
    message: 亲，您的订单已经收到，请核对以下信息是否正确，我们将尽快为您发出！
    text_with_vars: ${message}
    reminder_type: 核对地址
  - node_state: deposited
    order_state: deposited
    message: defualt message!
    text_with_vars: ${message}
    reminder_type: 已付定金未付尾款
  - node_state: paid
    order_state: paid
    message: 亲，您的订单已经收到，感谢您对我们的支持，我们将尽快为您发出！
    text_with_vars: ${message}
    reminder_type: 已付款
  - node_state: closed
    order_state: closed
    message: 亲，您对宝贝有什么不满意的吗？
    text_with_vars: ${message}
    reminder_type: 交易取消
beforeClass:
  name: 获取taskID和模板
  step:
    - byName: 获取所有的task_id
    - byName: 获取task模板
    - byName: 删除其他催单任务
    - byName: 使用模板新建一个task
testMethod:
  - name: 金额限制-满足-${payment}
    dataProvider:
      - payment: 5
      - payment: 5.01
      - payment: 19.99
      - payment: 20
    description: |
      """</br>
      用例描述：</br>
      1、满足金额限制的订单应该被触发。</br>
      </br>
      测试步骤</br>
      1、设置金额限制为5-20元</br>
      2、创建${payment}元的订单</br>
      3、校验催单信息</br>
      4、校验traces</br>
      """
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 设置金额限制为5-20元
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: 0
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='pay_amount_limit')].args.enable: true
            $.rules[?(@.type=='pay_amount_limit')].args.min: 5
            $.rules[?(@.type=='pay_amount_limit')].args.max: 20
      - byName: 发送消息给商家-固定问题
      - byName: 通过pulsar推送订单消息
        name: 通过pulsar推送订单消息-指定金额
        bodyEditor:
          json:
            $.word.order_id: ${__RandomOrderId(order_id)}
            $.word.buyer_id: ${buyer_id}
            $.word.status: ${order_state}
            $.word.payment: ${__BeanShell(${payment})}
            $.word.tbext.buyer_nick: ${buyer_id}
            $.word.tbext.original_order: >-
              {"adjust_fee":"0.00","buyer_cod_fee":"0.00","buyer_nick":"${buyer_id}","buyer_open_uid":"AAGdHqFhAAgoIdPNSTRGF2WJ","buyer_rate":false,"coupon_fee":0,"created":"${__timeShift(yyyy-MM-dd HH:mm:ss,,,zh_CN,everyday_start_time)}","discount_fee":"0.00","est_con_time":"付款后45天内","is_gift":false,"is_sh_ship":false,"modified":"${__timeShift(yyyy-MM-dd HH:mm:ss,,,zh_CN,everyday_start_time)}","new_presell":false,"nr_shop_guide_id":"","nr_shop_guide_name":"","num":1,"num_iid":604423906694,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":false,"cid":50024657,"discount_fee":"0.00","estimate_con_time":"付款后45天内","is_daixiao":false,"is_oversold":false,"num":1,"num_iid":604423906694,"oid":"${order_id}","oid_str":"${order_id}","order_from":"TAOBAO","payment":"20.00","pic_path":"https://img.alicdn.com/bao/uploaded/i3/1740721126/O1CN01PUtjEb1KBkX6UpzOm_!!1740721126.jpg","price":"10.00","refund_status":"NO_REFUND","seller_rate":false,"seller_type":"C","snapshot_url":"q:${order_id}_1","status":"WAIT_BUYER_PAY","title":"二手铅笔","total_fee":"10.00"}]},"payment":"20.00","pic_path":"https://img.alicdn.com/bao/uploaded/i3/1740721126/O1CN01PUtjEb1KBkX6UpzOm_!!1740721126.jpg","platform_subsidy_fee":"0.00","post_fee":"10.00","price":"10.00","received_payment":"0.00","receiver_address":"桂溪街道天府软件园A5-8","receiver_city":"成都市","receiver_country":"","receiver_district":"武侯区","receiver_mobile":"17721883949","receiver_name":"王健强","receiver_state":"四川省","receiver_town":"桂溪街道","receiver_zip":"000000","seller_flag":0,"seller_nick":"wangjq_1990","seller_rate":false,"service_tags":{"logistics_tag":[{"logistic_service_tag_list":{"logistic_service_tag":[{"service_tag":"origAreaId=510107;consignDate=1080","service_type":"TB_CONSIGN_DATE"},{"service_tag":"lgType=-4","service_type":"FAST"}]},"order_id":"${order_id}"},{"logistic_service_tag_list":{"logistic_service_tag":[{"service_tag":"consignDate=1080","service_type":"TB_CONSIGN_DATE"}]},"order_id":"${order_id}"}]},"service_type":"","shipping_type":"express","status":"WAIT_BUYER_PAY","tid":"${order_id}","tid_str":"${order_id}","title":"测试店铺Gerow","total_fee":"10.00","trade_from":"TAOBAO","type":"fixed","you_xiang":false}
      - byName: 获取催单消息
  - name: 金额限制-不满足-${payment}
    dataProvider:
      - payment: 4.99
      - payment: 20.01
    description: |
      """</br>
      用例描述：</br>
      1、不满足金额限制的订单不应该被触发。</br>
      </br>
      测试步骤</br>
      1、设置金额限制为5-20元</br>
      2、创建${payment}元的订单</br>
      3、校验催单信息</br>
      4、校验traces</br>
      """
    severity: NORMAL
    step:
      - byName: 设置金额限制为5-20元
      - byName: 发送消息给商家-固定问题
      - byName: 通过pulsar推送订单消息-指定金额
      - byName: 获取催单消息-消息为空
      - byName: 根据订单查询trace
      - byName: 查看trace详情
        assertion:
          - json:
              $.data.traces[?(@.phase=='TaskReject')].task_end_rule: [pay_amount_limit]
  - name: 金额限制-关闭-${payment}
    dataProvider:
      - payment: 4.99
      - payment: 5
      - payment: 5.01
      - payment: 19.99
      - payment: 20
      - payment: 20.01
    description: |
      """</br>
      用例描述：</br>
      1、关闭金额限制后，所有金额的订单都会触发。</br>
      </br>
      测试步骤</br>
      1、设置金额限制为5-20元</br>
      2、创建${payment}元的订单</br>
      3、校验催单信息</br>
      4、校验traces</br>
      """
    severity: NORMAL
    step:
      - byName: 开启催单任务
        name: 设置金额限制为5-20元-关闭限制
        bodyEditor:
          json:
            $.id: ${task_id}
            $.enable: true
            $.shop_id: ${shop_id}
            $.rules[?(@.type=='send_message')].args.state_delay: 0
            $.rules[?(@.type=='send_message')].args.message: ${message}
            $.rules[?(@.type=='pay_amount_limit')].args.enable: false
            $.rules[?(@.type=='pay_amount_limit')].args.min: 5
            $.rules[?(@.type=='pay_amount_limit')].args.max: 20
      - byName: 发送消息给商家-固定问题
      - byName: 通过pulsar推送订单消息-指定金额
      - byName: 获取催单消息
afterMethod:
  name: 测试结束后查看订单trace
  step:
    - byName: 根据订单查询trace
    - byName: 查看trace详情
afterClass:
  name: 测试结束后删除任务
  step:
    - byName: 删除催单任务